apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-buddy
  namespace: test-buddy
  labels:
    app: test-buddy
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: test-buddy
  template:
    metadata:
      labels:
        app: test-buddy
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/api/metrics"
    spec:
      serviceAccountName: test-buddy-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: test-buddy
        image: testbuddy/test-buddy:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: FIREBASE_API_KEY
          valueFrom:
            secretKeyRef:
              name: test-buddy-secrets
              key: firebase-api-key
        - name: FIREBASE_AUTH_DOMAIN
          valueFrom:
            secretKeyRef:
              name: test-buddy-secrets
              key: firebase-auth-domain
        - name: FIREBASE_PROJECT_ID
          valueFrom:
            secretKeyRef:
              name: test-buddy-secrets
              key: firebase-project-id
        - name: FIREBASE_STORAGE_BUCKET
          valueFrom:
            secretKeyRef:
              name: test-buddy-secrets
              key: firebase-storage-bucket
        - name: FIREBASE_MESSAGING_SENDER_ID
          valueFrom:
            secretKeyRef:
              name: test-buddy-secrets
              key: firebase-messaging-sender-id
        - name: FIREBASE_APP_ID
          valueFrom:
            secretKeyRef:
              name: test-buddy-secrets
              key: firebase-app-id
        - name: OPENROUTER_API_KEY
          valueFrom:
            secretKeyRef:
              name: test-buddy-secrets
              key: openrouter-api-key
        - name: REDIS_URL
          value: "redis://test-buddy-redis:6379"
        - name: POSTGRES_URL
          value: "postgresql://testbuddy:$(POSTGRES_PASSWORD)@test-buddy-postgres:5432/testbuddy"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: test-buddy-secrets
              key: postgres-password
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      imagePullSecrets:
      - name: docker-registry-secret
---
apiVersion: v1
kind: Service
metadata:
  name: test-buddy-service
  namespace: test-buddy
  labels:
    app: test-buddy
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: test-buddy
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-buddy-ingress
  namespace: test-buddy
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - testbuddy.com
    - www.testbuddy.com
    secretName: test-buddy-tls
  rules:
  - host: testbuddy.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: test-buddy-service
            port:
              number: 80
  - host: www.testbuddy.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: test-buddy-service
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: test-buddy-hpa
  namespace: test-buddy
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: test-buddy
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-buddy-config
  namespace: test-buddy
data:
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  CACHE_TTL: "3600"
  MAX_FILE_SIZE: "50MB"
  RATE_LIMIT_WINDOW: "900000"
  RATE_LIMIT_MAX: "100"
---
apiVersion: v1
kind: Secret
metadata:
  name: test-buddy-secrets
  namespace: test-buddy
type: Opaque
data:
  firebase-api-key: <base64-encoded-value>
  firebase-auth-domain: <base64-encoded-value>
  firebase-project-id: <base64-encoded-value>
  firebase-storage-bucket: <base64-encoded-value>
  firebase-messaging-sender-id: <base64-encoded-value>
  firebase-app-id: <base64-encoded-value>
  openrouter-api-key: <base64-encoded-value>
  postgres-password: <base64-encoded-value>
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-buddy-sa
  namespace: test-buddy
secrets:
- name: test-buddy-token
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: test-buddy-storage
  namespace: test-buddy
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd
